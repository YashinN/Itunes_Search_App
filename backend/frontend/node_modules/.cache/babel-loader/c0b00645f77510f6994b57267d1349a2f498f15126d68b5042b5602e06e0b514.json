{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./Search.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(props){// sets the search paramters for http request to api.\nvar _useState=useState(\"all\"),_useState2=_slicedToArray(_useState,2),entity=_useState2[0],setEntity=_useState2[1];// sets and stores users search parameter.\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),enteredSearch=_useState4[0],setEnteredSearch=_useState4[1];// stores filter ids and labels.\nvar filters=[{id:\"all\",label:\"all\"},{id:\"movie\",label:\"movie\"},{id:\"podcast\",label:\"podcast\"},{id:\"music\",label:\"music\"},{id:\"audiobook\",label:\"audio book\"},{id:\"shortFilm\",label:\"short film\"},{id:\"tvShow\",label:\"tv show\"},{id:\"ebook\",label:\"ebook\"}];// clears search input.\nvar clearSearch=function clearSearch(){setEnteredSearch(\"\");};// checks if user search input is empty.\nvar checkEmpty=function checkEmpty(val){// checks if user input length is equal to 0.\nif(val.trim().length===0){// alerts error if empty.\nalert(\"Enter a serch value!\");return false;}else{return true;}};// Post request sends search paramters server to perform api request to get search data.\nvar searchPostRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://itunessearchapp-production.up.railway.app/search\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},// sends media type and search parameter to server.\nbody:JSON.stringify({media:entity,searchField:enteredSearch})});case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;// stores the search results in prop from App.js.\nprops.searchData(data);case 7:case\"end\":return _context.stop();}},_callee);}));return function searchPostRequest(){return _ref.apply(this,arguments);};}();// function formats entered search removing space and adding +. Needs to be fromatted to be used in api call.\nvar formatSearch=function formatSearch(searhParam){// removes white space and adds + between words.\nvar removeWhiteSpace=searhParam.replace(/\\s+/g,\"+\").trim();// removes white space from ends.\nvar trimEnds=removeWhiteSpace;// removes + from begining of string.\nif(removeWhiteSpace[0]===\"+\"){trimEnds=trimEnds.slice(1,removeWhiteSpace.length);}// removes plus from end of string.\nif(removeWhiteSpace[removeWhiteSpace.length-1]===\"+\"){trimEnds=trimEnds.slice(0,trimEnds.length-1);}// returns formatted string.\nreturn trimEnds;};// runs when search button clicked.\nvar searchHandler=function searchHandler(){// checks if empty string.\nif(checkEmpty(enteredSearch)){// if not empty formats user entry.\nvar formatedSearch=formatSearch(enteredSearch);// sends request to server using formatted entry to get results.\nsearchPostRequest(entity,formatedSearch);// clears input fields.\nclearSearch();}};// sets entity or type of media when radio fields are selected.\nvar entityHandler=function entityHandler(e){// sets entity type eg. movie, ebook ect to be searched.\nsetEntity(e.target.id);};// Stores entered searched entry.\nvar enteredSearchHandler=function enteredSearchHandler(e){setEnteredSearch(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container search-wrapper\",children:[/*#__PURE__*/_jsx(\"form\",{className:\"search-form my-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mt-4 search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"search\",placeholder:\"Search....\",onChange:enteredSearchHandler,value:enteredSearch}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light\",onClick:searchHandler,children:\"Search\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-group container-fluid\",role:\"group\",\"aria-label\":\"Basic radio toggle button group\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row filter-row\",children:filters.map(function(filter,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-auto col-sm-auto col-md-auto px-0 filter-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"btn-check\",name:\"btnradio\",id:filter.id,autoComplete:\"off\",onClick:entityHandler,defaultChecked:entity===filter.id,\"data-testid\":filter.id}),/*#__PURE__*/_jsx(\"label\",{className:\"btn btn-outline-primary btn-sm filter-label\",htmlFor:filter.id,children:filter.label})]},index);})})})]});};export default Search;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Search","props","_useState","_useState2","_slicedToArray","entity","setEntity","_useState3","_useState4","enteredSearch","setEnteredSearch","filters","id","label","clearSearch","checkEmpty","val","trim","length","alert","searchPostRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","media","searchField","sent","json","searchData","stop","apply","arguments","formatSearch","searhParam","removeWhiteSpace","replace","trimEnds","slice","searchHandler","formatedSearch","entityHandler","e","target","enteredSearchHandler","value","className","children","type","placeholder","onChange","onClick","role","map","filter","index","name","autoComplete","defaultChecked","htmlFor"],"sources":["/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Search.css\";\n\nconst Search = (props) => {\n  // sets the search paramters for http request to api.\n  const [entity, setEntity] = useState(\"all\");\n  // sets and stores users search parameter.\n  const [enteredSearch, setEnteredSearch] = useState(\"\");\n\n  // stores filter ids and labels.\n  const filters = [\n    { id: \"all\", label: \"all\" },\n    { id: \"movie\", label: \"movie\" },\n    { id: \"podcast\", label: \"podcast\" },\n    { id: \"music\", label: \"music\" },\n    { id: \"audiobook\", label: \"audio book\" },\n    { id: \"shortFilm\", label: \"short film\" },\n    { id: \"tvShow\", label: \"tv show\" },\n    { id: \"ebook\", label: \"ebook\" },\n  ];\n\n  // clears search input.\n  const clearSearch = () => {\n    setEnteredSearch(\"\");\n  };\n\n  // checks if user search input is empty.\n  const checkEmpty = (val) => {\n    // checks if user input length is equal to 0.\n    if (val.trim().length === 0) {\n      // alerts error if empty.\n      alert(\"Enter a serch value!\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // Post request sends search paramters server to perform api request to get search data.\n  const searchPostRequest = async () => {\n    // Post request to server.\n    const response = await fetch(\n      \"https://itunessearchapp-production.up.railway.app/search\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        // sends media type and search parameter to server.\n        body: JSON.stringify({ media: entity, searchField: enteredSearch }),\n      }\n    );\n    // receives search results from server.\n    const data = await response.json();\n    // stores the search results in prop from App.js.\n    props.searchData(data);\n  };\n\n  // function formats entered search removing space and adding +. Needs to be fromatted to be used in api call.\n  const formatSearch = (searhParam) => {\n    // removes white space and adds + between words.\n    let removeWhiteSpace = searhParam.replace(/\\s+/g, \"+\").trim();\n    // removes white space from ends.\n    let trimEnds = removeWhiteSpace;\n    // removes + from begining of string.\n    if (removeWhiteSpace[0] === \"+\") {\n      trimEnds = trimEnds.slice(1, removeWhiteSpace.length);\n    }\n    // removes plus from end of string.\n    if (removeWhiteSpace[removeWhiteSpace.length - 1] === \"+\") {\n      trimEnds = trimEnds.slice(0, trimEnds.length - 1);\n    }\n    // returns formatted string.\n    return trimEnds;\n  };\n\n  // runs when search button clicked.\n  const searchHandler = () => {\n    // checks if empty string.\n    if (checkEmpty(enteredSearch)) {\n      // if not empty formats user entry.\n      let formatedSearch = formatSearch(enteredSearch);\n      // sends request to server using formatted entry to get results.\n      searchPostRequest(entity, formatedSearch);\n      // clears input fields.\n      clearSearch();\n    }\n  };\n\n  // sets entity or type of media when radio fields are selected.\n  const entityHandler = (e) => {\n    // sets entity type eg. movie, ebook ect to be searched.\n    setEntity(e.target.id);\n  };\n\n  // Stores entered searched entry.\n  const enteredSearchHandler = (e) => {\n    setEnteredSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"container search-wrapper\">\n      <form className=\"search-form my-5\">\n        <div className=\"form-group mt-4 search-container\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"search\"\n            placeholder=\"Search....\"\n            onChange={enteredSearchHandler}\n            value={enteredSearch}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={searchHandler}\n          >\n            Search\n          </button>\n        </div>\n      </form>\n\n      <div\n        className=\"btn-group container-fluid\"\n        role=\"group\"\n        aria-label=\"Basic radio toggle button group\"\n      >\n        <div className=\"row filter-row\">\n          {filters.map((filter, index) => (\n            <div\n              key={index}\n              className=\"col-auto col-sm-auto col-md-auto px-0 filter-container\"\n            >\n              <input\n                type=\"radio\"\n                className=\"btn-check\"\n                name=\"btnradio\"\n                id={filter.id}\n                autoComplete=\"off\"\n                onClick={entityHandler}\n                defaultChecked={entity === filter.id}\n                data-testid={filter.id}\n              />\n              <label\n                className=\"btn btn-outline-primary btn-sm filter-label\"\n                htmlFor={filter.id}\n              >\n                {filter.label}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}