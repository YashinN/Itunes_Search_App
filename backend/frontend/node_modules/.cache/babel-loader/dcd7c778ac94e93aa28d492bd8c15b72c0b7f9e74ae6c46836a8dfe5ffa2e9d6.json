{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = props => {\n  _s();\n  // sets the search paramters for http request to api.\n  const [entity, setEntity] = useState(\"all\");\n  // sets and stores users search parameter.\n  const [enteredSearch, setEnteredSearch] = useState(\"\");\n\n  // stores filter ids and labels.\n  const filters = [{\n    id: \"all\",\n    label: \"all\"\n  }, {\n    id: \"movie\",\n    label: \"movie\"\n  }, {\n    id: \"podcast\",\n    label: \"podcast\"\n  }, {\n    id: \"music\",\n    label: \"music\"\n  }, {\n    id: \"audiobook\",\n    label: \"audio book\"\n  }, {\n    id: \"shortFilm\",\n    label: \"short film\"\n  }, {\n    id: \"tvShow\",\n    label: \"tv show\"\n  }, {\n    id: \"ebook\",\n    label: \"ebook\"\n  }];\n\n  // clears search input.\n  const clearSearch = () => {\n    setEnteredSearch(\"\");\n  };\n\n  // checks if user search input is empty.\n  const checkEmpty = val => {\n    // checks if user input length is equal to 0.\n    if (val.trim().length === 0) {\n      // alerts error if empty.\n      alert(\"Enter a serch value!\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // Post request sends search paramters server to perform api request to get search data.\n  const searchPostRequest = async () => {\n    // Post request to server.\n    const response = await fetch(\"itunessearchapp-production.up.railway.app/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // sends media type and search parameter to server.\n      body: JSON.stringify({\n        media: entity,\n        searchField: enteredSearch\n      })\n    });\n    // receives search results from server.\n    const data = await response.json();\n    // stores the search results in prop from App.js.\n    props.searchData(data);\n  };\n\n  // function formats entered search removing space and adding +. Needs to be fromatted to be used in api call.\n  const formatSearch = searhParam => {\n    // removes white space and adds + between words.\n    let removeWhiteSpace = searhParam.replace(/\\s+/g, \"+\").trim();\n    // removes white space from ends.\n    let trimEnds = removeWhiteSpace;\n    // removes + from begining of string.\n    if (removeWhiteSpace[0] === \"+\") {\n      trimEnds = trimEnds.slice(1, removeWhiteSpace.length);\n    }\n    // removes plus from end of string.\n    if (removeWhiteSpace[removeWhiteSpace.length - 1] === \"+\") {\n      trimEnds = trimEnds.slice(0, trimEnds.length - 1);\n    }\n    // returns formatted string.\n    return trimEnds;\n  };\n\n  // runs when search button clicked.\n  const searchHandler = () => {\n    // checks if empty string.\n    if (checkEmpty(enteredSearch)) {\n      // if not empty formats user entry.\n      let formatedSearch = formatSearch(enteredSearch);\n      // sends request to server using formatted entry to get results.\n      searchPostRequest(entity, formatedSearch);\n      // clears input fields.\n      clearSearch();\n    }\n  };\n\n  // sets entity or type of media when radio fields are selected.\n  const entityHandler = e => {\n    // sets entity type eg. movie, ebook ect to be searched.\n    setEntity(e.target.id);\n  };\n\n  // Stores entered searched entry.\n  const enteredSearchHandler = e => {\n    setEnteredSearch(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container search-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-4 search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"search\",\n          placeholder: \"Search....\",\n          onChange: enteredSearchHandler,\n          value: enteredSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light\",\n          onClick: searchHandler,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group container-fluid\",\n      role: \"group\",\n      \"aria-label\": \"Basic radio toggle button group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row filter-row\",\n        children: filters.map((filter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto col-sm-auto col-md-auto px-0 filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            className: \"btn-check\",\n            name: \"btnradio\",\n            id: filter.id,\n            autoComplete: \"off\",\n            onClick: entityHandler,\n            defaultChecked: entity === filter.id,\n            \"data-testid\": filter.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"btn btn-outline-primary btn-sm filter-label\",\n            htmlFor: filter.id,\n            children: filter.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"eNMTcxQRpT2sVeswxok8tKlAu/M=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","props","_s","entity","setEntity","enteredSearch","setEnteredSearch","filters","id","label","clearSearch","checkEmpty","val","trim","length","alert","searchPostRequest","response","fetch","method","headers","body","JSON","stringify","media","searchField","data","json","searchData","formatSearch","searhParam","removeWhiteSpace","replace","trimEnds","slice","searchHandler","formatedSearch","entityHandler","e","target","enteredSearchHandler","value","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","map","filter","index","name","autoComplete","defaultChecked","htmlFor","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/Itunes_Search_App/backend/frontend/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Search.css\";\n\nconst Search = (props) => {\n  // sets the search paramters for http request to api.\n  const [entity, setEntity] = useState(\"all\");\n  // sets and stores users search parameter.\n  const [enteredSearch, setEnteredSearch] = useState(\"\");\n\n  // stores filter ids and labels.\n  const filters = [\n    { id: \"all\", label: \"all\" },\n    { id: \"movie\", label: \"movie\" },\n    { id: \"podcast\", label: \"podcast\" },\n    { id: \"music\", label: \"music\" },\n    { id: \"audiobook\", label: \"audio book\" },\n    { id: \"shortFilm\", label: \"short film\" },\n    { id: \"tvShow\", label: \"tv show\" },\n    { id: \"ebook\", label: \"ebook\" },\n  ];\n\n  // clears search input.\n  const clearSearch = () => {\n    setEnteredSearch(\"\");\n  };\n\n  // checks if user search input is empty.\n  const checkEmpty = (val) => {\n    // checks if user input length is equal to 0.\n    if (val.trim().length === 0) {\n      // alerts error if empty.\n      alert(\"Enter a serch value!\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // Post request sends search paramters server to perform api request to get search data.\n  const searchPostRequest = async () => {\n    // Post request to server.\n    const response = await fetch(\n      \"itunessearchapp-production.up.railway.app/search\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        // sends media type and search parameter to server.\n        body: JSON.stringify({ media: entity, searchField: enteredSearch }),\n      }\n    );\n    // receives search results from server.\n    const data = await response.json();\n    // stores the search results in prop from App.js.\n    props.searchData(data);\n  };\n\n  // function formats entered search removing space and adding +. Needs to be fromatted to be used in api call.\n  const formatSearch = (searhParam) => {\n    // removes white space and adds + between words.\n    let removeWhiteSpace = searhParam.replace(/\\s+/g, \"+\").trim();\n    // removes white space from ends.\n    let trimEnds = removeWhiteSpace;\n    // removes + from begining of string.\n    if (removeWhiteSpace[0] === \"+\") {\n      trimEnds = trimEnds.slice(1, removeWhiteSpace.length);\n    }\n    // removes plus from end of string.\n    if (removeWhiteSpace[removeWhiteSpace.length - 1] === \"+\") {\n      trimEnds = trimEnds.slice(0, trimEnds.length - 1);\n    }\n    // returns formatted string.\n    return trimEnds;\n  };\n\n  // runs when search button clicked.\n  const searchHandler = () => {\n    // checks if empty string.\n    if (checkEmpty(enteredSearch)) {\n      // if not empty formats user entry.\n      let formatedSearch = formatSearch(enteredSearch);\n      // sends request to server using formatted entry to get results.\n      searchPostRequest(entity, formatedSearch);\n      // clears input fields.\n      clearSearch();\n    }\n  };\n\n  // sets entity or type of media when radio fields are selected.\n  const entityHandler = (e) => {\n    // sets entity type eg. movie, ebook ect to be searched.\n    setEntity(e.target.id);\n  };\n\n  // Stores entered searched entry.\n  const enteredSearchHandler = (e) => {\n    setEnteredSearch(e.target.value);\n  };\n\n  return (\n    <div className=\"container search-wrapper\">\n      <form className=\"search-form my-5\">\n        <div className=\"form-group mt-4 search-container\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"search\"\n            placeholder=\"Search....\"\n            onChange={enteredSearchHandler}\n            value={enteredSearch}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={searchHandler}\n          >\n            Search\n          </button>\n        </div>\n      </form>\n\n      <div\n        className=\"btn-group container-fluid\"\n        role=\"group\"\n        aria-label=\"Basic radio toggle button group\"\n      >\n        <div className=\"row filter-row\">\n          {filters.map((filter, index) => (\n            <div\n              key={index}\n              className=\"col-auto col-sm-auto col-md-auto px-0 filter-container\"\n            >\n              <input\n                type=\"radio\"\n                className=\"btn-check\"\n                name=\"btnradio\"\n                id={filter.id}\n                autoComplete=\"off\"\n                onClick={entityHandler}\n                defaultChecked={entity === filter.id}\n                data-testid={filter.id}\n              />\n              <label\n                className=\"btn btn-outline-primary btn-sm filter-label\"\n                htmlFor={filter.id}\n              >\n                {filter.label}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}